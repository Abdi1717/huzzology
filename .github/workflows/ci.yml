name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        workspace: [shared, client, server]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install workspace dependencies
        run: npm run setup:${{ matrix.workspace }}
        
      - name: Lint ${{ matrix.workspace }}
        run: npm run lint:${{ matrix.workspace }}
        
      - name: Test ${{ matrix.workspace }}
        run: npm run test:${{ matrix.workspace }}
        env:
          NODE_ENV: test
          
      - name: Build ${{ matrix.workspace }}
        run: npm run build:${{ matrix.workspace }}

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install all workspace dependencies
        run: npm run setup
        
      - name: Run coverage tests
        run: npm run test:coverage
        env:
          NODE_ENV: test
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build & Deploy Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install all workspace dependencies
        run: npm run setup
        
      - name: Build all workspaces
        run: npm run build
        
      - name: Check for build artifacts
        run: |
          ls -la shared/dist/
          ls -la client/dist/
          ls -la server/dist/
          
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            shared/dist/
            client/dist/
            server/dist/
          retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Run dependency check
        run: |
          npx depcheck --ignores="@types/*,eslint-*,prettier,husky,lint-staged,concurrently"
        continue-on-error: true

  format-check:
    name: Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check code formatting
        run: npm run format:check 