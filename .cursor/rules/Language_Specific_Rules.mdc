---
description: Language-specific coding standards and conventions for various programming languages
globs: "**/*.{ts,tsx,js,jsx,py,java,cs,go,rs,sql}"
alwaysApply: true
---

# Language-Specific Coding Rules

## JavaScript/TypeScript
- Use const/let instead of var
- Prefer arrow functions for simple operations
- Use async/await over Promise chains
- Implement proper TypeScript types when applicable
- Use ESLint and Prettier configurations
- Handle async operations properly
- Use modern ES6+ features appropriately
- Implement proper module imports/exports

## Python
- Follow PEP 8 style guidelines
- Use type hints for function parameters and returns
- Implement proper exception handling
- Use list/dict comprehensions when appropriate
- Follow naming conventions (snake_case)
- Use virtual environments
- Write docstrings for functions and classes
- Implement proper logging

## Java
- Follow Java naming conventions
- Use proper package structure
- Implement proper exception handling
- Use generics appropriately
- Follow SOLID principles
- Use builder patterns for complex objects
- Implement proper equals/hashCode methods
- Use Java 8+ features (streams, lambdas)

## C#/.NET
- Follow C# naming conventions (PascalCase)
- Use proper namespace organization
- Implement IDisposable when needed
- Use LINQ appropriately
- Follow async/await patterns
- Use dependency injection
- Implement proper exception handling
- Use nullable reference types

## Go
- Follow Go conventions and idioms
- Use proper package naming
- Implement proper error handling
- Use goroutines and channels appropriately
- Follow Go formatting standards (gofmt)
- Use interfaces effectively
- Implement proper testing
- Use context for cancellation
## Rust
- Follow Rust ownership principles
- Use proper error handling with Result
- Implement traits appropriately
- Use cargo for dependency management
- Follow Rust naming conventions
- Use pattern matching effectively
- Implement proper testing
- Use clippy for linting

## Database (SQL)
- Use parameterized queries
- Implement proper indexing
- Follow normalization principles
- Use appropriate data types
- Implement proper constraints
- Use transactions appropriately
- Consider query performance
- Use proper naming conventions
