
---
description: DevOps and deployment standards for CI/CD, infrastructure, and monitoring
globs: "docker/**/*", ".github/**/*", "**/*.yml", "**/*.yaml", "**/Dockerfile*"
alwaysApply: true
---

# DevOps and Deployment Rules

## CI/CD Pipeline Standards
- Automate all builds and deployments
- Implement proper testing stages
- Use infrastructure as code
- Implement proper branching strategies
- Use semantic versioning
- Automate security scanning
- Implement proper rollback procedures
- Monitor deployment success

## Version Control Best Practices
- Use meaningful commit messages
- Keep commits atomic and focused
- Use feature branches appropriately
- Implement proper code review process
- Tag releases appropriately
- Maintain clean commit history
- Use conventional commit formats
- Protect main/production branches

## Environment Management
- Maintain environment parity
- Use containerization consistently
- Implement proper environment configuration
- Use separate environments for dev/staging/prod
- Automate environment provisioning
- Monitor environment health
- Implement proper backup strategies
- Document environment requirements

## Infrastructure as Code
- Version control all infrastructure
- Use declarative configuration
- Implement proper state management
- Use modular infrastructure components
- Implement infrastructure testing
- Document infrastructure decisions
- Use appropriate IaC tools
- Implement drift detection

## Monitoring and Observability
- Implement comprehensive logging
- Use distributed tracing
- Monitor application metrics
- Implement health checks
- Use appropriate monitoring tools
- Set up alerting rules
- Monitor infrastructure performance
- Implement SLA monitoring
## Container Best Practices
- Use minimal base images
- Implement proper layer caching
- Use multi-stage builds
- Never run containers as root
- Implement proper secrets management
- Use resource limits appropriately
- Implement health checks
- Keep containers stateless

## Database Operations
- Implement database migrations
- Use database versioning
- Implement backup strategies
- Test disaster recovery procedures
- Monitor database performance
- Implement proper connection pooling
- Use read replicas appropriately
- Document database procedures

## Security in DevOps
- Scan container images for vulnerabilities
- Implement secrets scanning
- Use secure base images
- Implement proper RBAC
- Monitor for security issues
- Use signed container images
- Implement network segmentation
- Regular security audits

## Release Management
- Implement blue-green deployments
- Use canary releases for critical changes
- Implement feature flags
- Document release procedures
- Implement proper testing stages
- Use automated rollback triggers
- Monitor post-deployment metrics
- Communicate changes effectively
